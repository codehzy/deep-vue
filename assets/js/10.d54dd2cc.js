(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{554:function(t,s,a){t.exports=a.p+"assets/img/runPoints.c7f4d4de.png"},564:function(t,s,a){"use strict";a.r(s);var n=a(17),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"第一章、权衡艺术"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一章、权衡艺术"}},[t._v("#")]),t._v(" 第一章、权衡艺术")]),t._v(" "),n("h3",{attrs:{id:"_1-1-命令式和声明式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-命令式和声明式"}},[t._v("#")]),t._v(" 1.1 命令式和声明式")]),t._v(" "),n("ul",[n("li",[t._v("本节强调了原生的方法操作DOM和JQuery方法操作DOM的方式都是"),n("strong",[t._v("命令式")]),t._v("。而像Vue则是一个"),n("strong",[t._v("声明式")]),t._v("。")]),t._v(" "),n("li",[t._v("两者区别，命令式则是"),n("strong",[t._v("关注过程")]),t._v("，声明式则"),n("strong",[t._v("关注结果")]),t._v("。")])]),t._v(" "),n("h3",{attrs:{id:"_1-2-性能与可维护性的权衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-性能与可维护性的权衡"}},[t._v("#")]),t._v(" 1.2 性能与可维护性的权衡")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("本节抛出一个结论："),n("strong",[t._v("声明式代码的性能不优于命令式的性能。")])])]),t._v(" "),n("li",[n("p",[t._v("两者对比。基于直接修改的性能消耗定义为A，找出差异的性能消耗定义为B。")]),t._v(" "),n("ul",[n("li",[t._v("命令式代码的更新性能消耗 = A")]),t._v(" "),n("li",[t._v("声明式代码的更新性能消耗 = B + A")])])]),t._v(" "),n("li",[n("p",[t._v("正常看来，整找出差异的性能消耗为0时。声明式代码和命令式代码的性能相同，无法做到超越。毕竟总的来说框架本身就是"),n("strong",[t._v("封装了命令式代码")]),t._v("才实现了"),n("strong",[t._v("面向用户的声明式")]),t._v("。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("框架设计者的原则")]),t._v("：在保持可维护的同时让性能损失最小化。")])])]),t._v(" "),n("h3",{attrs:{id:"_1-3-虚拟dom的性能到底如何"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-虚拟dom的性能到底如何"}},[t._v("#")]),t._v(" 1.3 虚拟DOM的性能到底如何")]),t._v(" "),n("p",[n("img",{attrs:{src:a(554),alt:"对比跑分测试"}})]),t._v(" "),n("ul",[n("li",[n("ol",[n("li",[n("strong",[t._v("对比纯JavaScript操作与DOM操作")])])]),t._v(" "),n("ul",[n("li",[t._v("文中给出上述跑分例子，"),n("strong",[t._v("上方")]),t._v("则是循环10000次，每次创建一个JavaScript对象并将其添加到数组中。"),n("strong",[t._v("下方")]),t._v("则是DOM操作，每次创建一个DOM元素将其添加到页面中。因此我们可以发现，纯JavaScript层面的操作要比DOM操作快得多。")]),t._v(" "),n("li",[t._v("innerHtml创建页面的性能： "),n("strong",[t._v("HTML字符串拼接的计算量 + innerHTML的DOM计算量")]),t._v("。")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[n("strong",[t._v("虚拟DOM")])])]),t._v(" "),n("ul",[n("li",[t._v("虚拟DOM ： 创建JavaScript的计算量 % 创建真实DOM的计算量")]),t._v(" "),n("li",[t._v("innerHTML： "),n("strong",[t._v("innerHTML更新页面的过程是重新构建HTML字符串，再重新设置DOM元素的innerHTML")]),t._v("，也就是说，哪怕我们只更改了一个文字，也要重新设置innerHTML属性。而重新设置innerHTML属性就"),n("strong",[t._v("等价于 销毁所有旧的DOM元素，再全量创建新的DOM元素")]),t._v("。")]),t._v(" "),n("li",[t._v("虚拟DOM： 它需要重新创建JavaScript对象（虚拟DOM树），然后比较新旧DOM找到变化的元素并更新他们。")])])]),t._v(" "),n("li",[n("p",[t._v("虚拟DOM的优势")]),t._v(" "),n("ul",[n("li",[t._v("虚拟DOM在更新页面时只会更新必要的元素，但innerHTML需要全量更新。")])])])]),t._v(" "),n("h3",{attrs:{id:"_1-4-运行时和编译时"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-运行时和编译时"}},[t._v("#")]),t._v(" 1.4 运行时和编译时")]),t._v(" "),n("h4",{attrs:{id:"_1-vue是怎么渲染的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue是怎么渲染的"}},[t._v("#")]),t._v(" 1. vue是怎么渲染的")]),t._v(" "),n("p",[t._v("本节讲述了Vue框架，用户构建一个树型的数据对象，根据运行"),n("strong",[t._v("Render函数")]),t._v("来对该对象"),n("strong",[t._v("递归")]),t._v("地将数据渲染成DOM元素。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("根据上述代码，每个对象有两个属性： "),n("strong",[t._v("tag代表标签名名称，children既可以是一个数组（代表子节点），也可以直接是一段文本（代表文本子节点）")])]),t._v(" "),n("h4",{attrs:{id:"_2-render函数的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-render函数的实现"}},[t._v("#")]),t._v(" 2. Render函数的实现")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组， 递归调用 Render， 使用 el 作为 root参数")]),t._v("\n\t\tobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将元素添加到root")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("用户使用")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染到 body 下")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Reder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("痛点")]),t._v("： 用户觉得手动写一个树型的对象太难了。")]),t._v(" "),n("h4",{attrs:{id:"_3-实现compiler函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现compiler函数"}},[t._v("#")]),t._v(" 3. 实现Compiler函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 Compiler 编译得到树型结构的数据对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Compiler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再调用 Render 进行渲染")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-思考-为什么不直接编译成命令式代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-思考-为什么不直接编译成命令式代码"}},[t._v("#")]),t._v(" 4. 思考： 为什么不直接编译成命令式代码")]),t._v(" "),n("ul",[n("li",[t._v("由于纯运行时框架，由于它没有编译的过程，因此门额没有办法分析用户提供的内容。但，但是如果加入编译步骤，"),n("strong",[t._v("就可以对用户提供的内容进行提取，并进一步操作。")])]),t._v(" "),n("li",[t._v("如果是纯运行框架，那么需要编译完成后才能看到结果。"),n("strong",[t._v("（Svelte纯运行时）")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);